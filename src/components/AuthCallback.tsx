import React, { useEffect, useState } from 'react';
import { useNavigate, useSearchParams } from 'react-router-dom';

const AuthCallback: React.FC = () => {
  const [searchParams] = useSearchParams();
  const navigate = useNavigate();
  const [status, setStatus] = useState<'loading' | 'success' | 'error'>('loading');
  const [error, setError] = useState('');

  useEffect(() => {
    const handleCallback = async () => {
      try {
        console.log('üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback –æ—Ç TikTok...');
        
        // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
        const code = searchParams.get('code');
        const error = searchParams.get('error');
        const state = searchParams.get('state');

        console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã callback:', { code, error, state });

        if (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç TikTok:', error);
          setError(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error}`);
          setStatus('error');
          return;
        }

        if (!code) {
          console.error('‚ùå –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω');
          setError('–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω');
          setStatus('error');
          return;
        }

        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', code);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –æ–∫–Ω—É
        if (window.opener) {
          window.opener.postMessage({
            type: 'TIKTOK_AUTH_SUCCESS',
            code: code,
            state: state
          }, window.location.origin);
          
          console.log('üì§ –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –æ–∫–Ω—É');
          window.close();
        } else {
          console.error('‚ùå –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
          setError('–û—à–∏–±–∫–∞: —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
          setStatus('error');
        }

      } catch (err: any) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback:', err);
        setError(`–û—à–∏–±–∫–∞: ${err.message}`);
        setStatus('error');
        
        if (window.opener) {
          window.opener.postMessage({
            type: 'TIKTOK_AUTH_ERROR',
            error: err.message
          }, window.location.origin);
        }
      }
    };

    handleCallback();
  }, [searchParams, navigate]);

  if (status === 'loading') {
    return (
      <div className="card" style={{ maxWidth: '400px', margin: '50px auto', textAlign: 'center' }}>
        <h2>üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...</h2>
        <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...</p>
        <div style={{ 
          width: '40px', 
          height: '40px', 
          border: '4px solid #f3f3f3',
          borderTop: '4px solid #ff0050',
          borderRadius: '50%',
          animation: 'spin 1s linear infinite',
          margin: '20px auto'
        }}></div>
        <style>{`
          @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
          }
        `}</style>
      </div>
    );
  }

  if (status === 'error') {
    return (
      <div className="card" style={{ maxWidth: '400px', margin: '50px auto', textAlign: 'center' }}>
        <h2 style={{ color: '#ff0050' }}>‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h2>
        <p>{error}</p>
        <button 
          onClick={() => window.close()}
          className="btn"
        >
          –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ
        </button>
      </div>
    );
  }

  return (
    <div className="card" style={{ maxWidth: '400px', margin: '50px auto', textAlign: 'center' }}>
      <h2 style={{ color: 'green' }}>‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!</h2>
      <p>–û–∫–Ω–æ –∑–∞–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏...</p>
    </div>
  );
};

export default AuthCallback;
